# Generated by Django 2.0.1 on 2018-01-14 19:32

from django.db import migrations, models
import phonenumber_field.modelfields
import user_panel.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=13)),
                ('date_joined', models.DateField(default=user_panel.models.get_date, max_length=10)),
                ('date_expired', models.DateField(blank=True, max_length=10, null=True)),
                ('profile_image', models.ImageField(blank=True, max_length=200, null=True, upload_to='')),
                ('company', models.CharField(max_length=10)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='ChainCompanyInfoModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='İsimsiz', max_length=100)),
                ('person', models.CharField(default='Ad-Soyad', max_length=100)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(default='+905553332211', max_length=13)),
                ('email', models.EmailField(default='idle@dormoni.com', max_length=254, unique=True)),
            ],
            options={
                'db_table': 'chain_company',
            },
        ),
        migrations.CreateModel(
            name='CompanyInfoModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='İsimsiz', max_length=20)),
                ('vno', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('account', models.CharField(blank=True, max_length=15, null=True)),
                ('payment_detail', models.CharField(blank=True, max_length=50, null=True)),
                ('chain_company', models.CharField(max_length=10)),
                ('desc', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'company_info',
            },
        ),
    ]
